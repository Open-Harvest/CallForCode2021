"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ComputesTemplateFromComponent_1 = require("./angular-beta/ComputesTemplateFromComponent");
var defaultContext = {
    id: 'unspecified',
    name: 'unspecified',
    kind: 'unspecified',
    parameters: {},
    args: {},
    argTypes: {},
    globals: {},
};
function decorateStory(mainStoryFn, decorators) {
    var returnDecorators = decorators.reduce(function (previousStoryFn, decorator) { return function (context) {
        if (context === void 0) { context = defaultContext; }
        var decoratedStory = decorator(function (_a) {
            if (_a === void 0) { _a = {}; }
            var parameters = _a.parameters, innerContext = __rest(_a, ["parameters"]);
            return previousStoryFn(__assign(__assign({}, context), innerContext));
        }, context);
        return decoratedStory;
    }; }, function (context) { return prepareMain(mainStoryFn(context), context); });
    return returnDecorators;
}
exports.default = decorateStory;
var prepareMain = function (story, context) {
    var _a;
    var template = story.template;
    var component = (_a = story.component) !== null && _a !== void 0 ? _a : context.parameters.component;
    if (hasNoTemplate(template) && component) {
        template = ComputesTemplateFromComponent_1.computesTemplateFromComponent(component, story.props, '');
    }
    return __assign(__assign({}, story), (template ? { template: template } : {}));
};
function hasNoTemplate(template) {
    return template === null || template === undefined;
}
